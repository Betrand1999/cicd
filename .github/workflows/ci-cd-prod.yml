name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  ##################### Build ################
  build:
    name: Build
    runs-on: [self-hosted, Linux, X64,ip-172-31-22-214]
    if: github.event.pull_request.merged == true
    environment: prod  # ðŸ”¹ Fetch secrets from the 'prod' environment

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Python Environment
        shell: bash
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt --no-cache-dir

      - name: Clean Dist Directory
        shell: bash
        run: |
          rm -rf build dist *.egg-info

      - name: Build Package
        shell: bash
        run: |
          source venv/bin/activate
          pip install --upgrade setuptools wheel
          python setup.py sdist bdist_wheel
          ls dist

  # ##################### Unit-Test ################
  # test:
  #   name: Unit-Test
  #   runs-on: [self-hosted, Linux, X64]
  #   needs: build
  #   environment: prod  # ðŸ”¹ Fetch secrets from the 'prod' environment

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3

  #     - name: Set Up Python Environment
  #       shell: bash
  #       run: |
  #         python3 -m venv venv
  #         source venv/bin/activate
  #         pip install --upgrade pip
  #         pip install -r requirements.txt

  #     - name: Run Unit Tests
  #       shell: bash
  #       run: |
  #         source venv/bin/activate
  #         pip install pytest
  #         pytest test_app.py

  # ##################### SonarQube Scan ################
  # sonarqube:
  #   name: SonarQube Scan
  #   runs-on: [self-hosted, Linux, X64]
  #   needs: test
  #   environment: prod  # ðŸ”¹ Fetch secrets from the 'prod' environment

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

  #     - name: SonarQube Scan
  #       uses: sonarsource/sonarqube-scan-action@master
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}


  # #################### Package and Publish to PyPI ################
  # package-and-publish:
  #   name: Package and Publish to PyPI
  #   runs-on: [self-hosted, Linux, X64]
  #   needs: sonarqube
  #   environment: prod  # ðŸ”¹ Fetch secrets from the 'prod' environment

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3

  #     - name: Set Up Python Environment for Packaging
  #       shell: bash
  #       run: |
  #         python3 -m venv venv
  #         source venv/bin/activate
  #         pip install --upgrade pip
  #         pip install setuptools wheel twine

  #     - name: Clean Dist Directory
  #       shell: bash
  #       run: |
  #         rm -rf dist

  #     - name: Build Package
  #       shell: bash
  #       run: |
  #         source venv/bin/activate
  #         python setup.py sdist bdist_wheel

  #     - name: Publish to PyPI
  #       shell: bash
  #       env:
  #         TWINE_USERNAME: __token__
  #         TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
  #       run: |
  #         source venv/bin/activate
  #         twine upload dist/*


 
